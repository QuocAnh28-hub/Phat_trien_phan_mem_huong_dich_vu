const app = angular.module("dahApp", []);

app.controller("BanHangCtrl", function ($scope, $http) {
  console.log("AngularJS Qu·∫£n l√Ω b√°n h√†ng ƒë√£ kh·ªüi t·∫°o!");

  const API_BASE = "https://localhost:7107/api-thungan/QuanLyBanHang";
  const token = localStorage.getItem("token");
  const headers = token ? { Authorization: `Bearer ${token}` } : {};
  const money = n => new Intl.NumberFormat("vi-VN").format(n || 0);

  // ================== BI·∫æN KH·ªûI T·∫†O ==================
  $scope.khachHang = {};
  $scope.sanPham = {};
  $scope.danhSachCT = [];
  $scope.tongTien = 0;

  // Bi·∫øn ƒëi·ªÅu khi·ªÉn popup thanh to√°n
  $scope.showPaymentModal = false;
  $scope.thanhToan = { phuongThuc: "Ti·ªÅn m·∫∑t" };

  // ================== 1Ô∏è‚É£ KI·ªÇM TRA KH√ÅCH H√ÄNG ==================
  $scope.kiemTraKhachHang = function () {
    const maKH = $scope.khachHang.ma?.trim();
    if (!maKH) return;

    console.log("üîç ƒêang ki·ªÉm tra kh√°ch h√†ng:", maKH);
    $http.get(`${API_BASE}/get-byid-khachhang?maKH=${maKH}`, { headers })
      .then(res => {
        if (res.data && res.data.success && res.data.data) {
          const kh = res.data.data;
          $scope.khachHang.ten = kh.TenKH;
          $scope.khachHang.sdt = kh.SDT;
          $scope.khachHang.diachi = kh.DiaChi;
          $scope.khachHang.moi = false;
          console.log("‚úÖ ƒê√£ t·∫£i kh√°ch h√†ng:", kh);
        } else {
          alert("‚ö†Ô∏è Kh√°ch h√†ng ch∆∞a t·ªìn t·∫°i! S·∫Ω th√™m m·ªõi khi l∆∞u h√≥a ƒë∆°n.");
          $scope.khachHang.ten = "";
          $scope.khachHang.sdt = "";
          $scope.khachHang.diachi = "";
          $scope.khachHang.moi = true;
        }
      })
      .catch(err => {
        if (err.status === 404) {
          alert("‚ö†Ô∏è Kh√°ch h√†ng ch∆∞a t·ªìn t·∫°i! S·∫Ω th√™m m·ªõi khi l∆∞u h√≥a ƒë∆°n.");
          $scope.khachHang.ten = "";
          $scope.khachHang.sdt = "";
          $scope.khachHang.diachi = "";
          $scope.khachHang.moi = true;
        } else {
          console.error("‚ùå L·ªói l·∫•y KH:", err);
          alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi API kh√°ch h√†ng!");
        }
      });
  };

  // ================== 2Ô∏è‚É£ TH√äM S·∫¢N PH·∫®M ==================
  $scope.themSanPham = function () {
    const maSP = $scope.sanPham.ma?.trim();
    const sl = parseInt($scope.sanPham.sl) || 1;
    if (!maSP) return alert("Vui l√≤ng nh·∫≠p m√£ s·∫£n ph·∫©m!");

    console.log("üîç ƒêang l·∫•y th√¥ng tin s·∫£n ph·∫©m:", maSP);
    $http.get(`${API_BASE}/get-sanpham-by-id?id=${maSP}`, { headers })
      .then(res => {
        if (res.data && res.data.length > 0) {
          const sp = res.data[0];
          const gia = Number(sp.dongia);
          const tt = gia * sl;
          $scope.danhSachCT.push({
            masp: sp.masp,
            tensp: sp.tensp,
            soluong: sl,
            dongia: gia,
            tongtien: tt
          });
          $scope.capNhatTongTien();
        } else {
          alert("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m!");
        }
      })
      .catch(err => {
        if (err.status === 404) {
          alert("‚ö†Ô∏è S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i!");
        } else {
          console.error("‚ùå L·ªói l·∫•y s·∫£n ph·∫©m:", err);
          alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi API s·∫£n ph·∫©m!");
        }
      });
  };

  // ================== 3Ô∏è‚É£ X√ìA S·∫¢N PH·∫®M ==================
  $scope.xoaSanPham = function (i) {
    $scope.danhSachCT.splice(i, 1);
    $scope.capNhatTongTien();
  };

  // ================== 4Ô∏è‚É£ T√çNH T·ªîNG TI·ªÄN ==================
  $scope.capNhatTongTien = function () {
    $scope.tongTien = $scope.danhSachCT.reduce((s, x) => s + x.tongtien, 0);
  };

  // ================== 5Ô∏è‚É£ L∆ØU H√ìA ƒê∆†N ==================
  $scope.luuHoaDon = async function () {
    const maKH = $scope.khachHang.ma?.trim();
    if (!maKH) return alert("Vui l√≤ng nh·∫≠p m√£ kh√°ch h√†ng!");
    if ($scope.danhSachCT.length === 0) return alert("Ch∆∞a c√≥ s·∫£n ph·∫©m n√†o!");

    // N·∫øu kh√°ch h√†ng m·ªõi => th√™m m·ªõi
    if ($scope.khachHang.moi) {
      const newKH = {
        maKH: maKH,
        tenKH: $scope.khachHang.ten || "Kh√°ch h√†ng m·ªõi",
        sdt: $scope.khachHang.sdt || "",
        diaChi: $scope.khachHang.diachi || ""
      };
      try {
        await $http.post(`${API_BASE}/insert-khachhang`, newKH, { headers });
        console.log("üÜï ƒê√£ th√™m kh√°ch h√†ng m·ªõi:", newKH);
        $scope.khachHang.moi = false;
      } catch (err) {
        console.error("‚ùå L·ªói th√™m kh√°ch h√†ng:", err);
        return alert("Kh√¥ng th·ªÉ th√™m kh√°ch h√†ng m·ªõi!");
      }
    }

    // T·∫°o d·ªØ li·ªáu h√≥a ƒë∆°n
    const maHDBan = "HD" + Date.now().toString().slice(-6);
    const tong = $scope.tongTien;
    const payload = {
      MAHDBAN: maHDBan,
      MANV: "NV001",
      MAKH: maKH,
      NGAYLAP: new Date().toISOString(),
      TONGTIENHANG: tong,
      THUEVAT: Math.round(tong * 0.1),
      GIAMGIA: 0,
      listjson_chitietban: $scope.danhSachCT.map(x => ({
        MAHDBAN: maHDBan,
        MASP: x.masp,
        SOLUONG: x.soluong,
        DONGIA: x.dongia,
        TONGTIEN: x.tongtien
      }))
    };

    try {
      const res = await $http.post(`${API_BASE}/insert-hoadonban`, payload, { headers });
      console.log("üì¶ Payload g·ª≠i ƒëi:", payload);

      if (res.data && res.data.success) {
        alert("‚úÖ L∆∞u h√≥a ƒë∆°n th√†nh c√¥ng!");
        $scope.danhSachCT = [];
        $scope.capNhatTongTien();

        console.log("‚úÖ H√≥a ƒë∆°n l∆∞u th√†nh c√¥ng, m·ªü popup thanh to√°n!");
        $scope.showPaymentModal = true;

        // üëâ M·ªü popup ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n
        $scope.thanhToan = {
          maHDBan: maHDBan,
          soTienThanhToan: tong,
          phuongThuc: "Ti·ªÅn m·∫∑t"
        };
        $scope.showPaymentModal = true;
      } else {
        alert("‚ùå L∆∞u h√≥a ƒë∆°n th·∫•t b·∫°i!");
      }
    } catch (err) {
      console.error("‚ùå L·ªói l∆∞u h√≥a ƒë∆°n:", err);
      alert("Kh√¥ng th·ªÉ l∆∞u h√≥a ƒë∆°n!");
    }
  };

  // ================== 6Ô∏è‚É£ X·ª¨ L√ù POPUP THANH TO√ÅN ==================
  $scope.dongModal = function () {
    $scope.showPaymentModal = false;
  };

  $scope.xacNhanThanhToan = async function () {
    const maThanhToan = "TT" + Date.now().toString().slice(-5);
    const pt = $scope.thanhToan.phuongThuc;
    const thanhToan = {
      maThanhToan: maThanhToan,
      maHDBan: $scope.thanhToan.maHDBan,
      phuongThuc: pt,
      soTienThanhToan: pt === "Ghi n·ª£" ? 0 : $scope.thanhToan.soTienThanhToan,
      ngayThanhToan: new Date().toISOString(),
      trangThai: pt === "Ghi n·ª£" ? "Ch∆∞a thanh to√°n" : "ƒê√£ thanh to√°n"
    };

    try {
      const resTT = await $http.post(`${API_BASE}/insert-thanhtoan`, thanhToan, { headers });
      console.log("üí∞ ƒê√£ t·∫°o thanh to√°n:", resTT.data);

      if (resTT.data && resTT.data.success) {
        alert(
          pt === "Ghi n·ª£"
            ? "üßæ ƒê√£ ghi c√¥ng n·ª£, kh√°ch h√†ng ch∆∞a thanh to√°n!"
            : "üíµ H√≥a ƒë∆°n ƒë√£ ƒë∆∞·ª£c thanh to√°n th√†nh c√¥ng!"
        );
      } else {
        alert("‚ùå L·ªói khi t·∫°o thanh to√°n!");
      }
    } catch (err) {
      console.error("‚ùå L·ªói th√™m thanh to√°n:", err);
      alert("Kh√¥ng th·ªÉ t·∫°o b·∫£n ghi thanh to√°n!");
    } finally {
      $scope.showPaymentModal = false;
    }
  };
});
